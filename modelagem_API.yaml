openapi: 3.0.3
info:
  title: API Academia de Professores
  description: |-
    Modelo de API com as operações básicas de CRUD de professores e eventos desenvolvido para o projeto da academia de professores do Instituto Mauá de Tecnologia.

    Link para os repositórios do Github:
    - [Repositório Back-End](https://github.com/MauaAP/Maua_AP_Back_End)
    - [Repositório Front-End](https://github.com/MauaAP/Maua_AP_Front_End)
  version: 1.0.11

servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: usuarios
    description: CRUD de usuários
  - name: eventos
    description: CRUD de eventos

paths:
  /usuarios:
    get:
      tags:
      - usuarios
      summary: Lista todos os usuários
      description: Obtém uma lista de todos os usuários cadastrados
      responses:
        200:
          description: Lista de usuários recuperada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'  
    post:
      tags:
      - usuarios
      summary: Cria um novo usuário
      description: Cria um novo registro de usuário
      parameters:
        - name: Usuario
          in: body
          description: Objeto de usuário a ser criado
          required: true
          schema:
            $ref: '#/components/schemas/Usuario'
      responses:
        201:
          description: Usuário criado com sucesso

  /usuarios/{cpf}:
    get:
      tags:
      - usuarios
      summary: Obtém um usuário pelo CPF
      description: Obtém um usuário específico pelo seu CPF
      parameters:
        - name: cpf
          in: path
          description: CPF do usuário a ser obtido
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Usuário recuperado com sucesso
          schema:
            $ref: '#/components/schemas/Usuario'

    put:
      tags:
      - usuarios
      summary: Atualiza um usuário existente
      description: Atualiza os dados de um usuário existente pelo seu CPF
      parameters:
        - name: cpf
          in: path
          description: CPF do usuário a ser atualizado
          required: true
          type: integer
          format: int64
        - name: Usuario
          in: body
          description: Novos dados do usuário
          required: true
          schema:
            $ref: '#/components/schemas/Usuario'
      responses:
        200:
          description: Usuário atualizado com sucesso

    delete:
      tags:
      - usuarios
      summary: Deleta um usuário pelo CPF
      description: Deleta um usuário específico pelo seu CPF
      parameters:
        - name: cpf
          in: path
          description: CPF do usuário a ser deletado
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: Usuário deletado com sucesso
  /eventos:
    get:
      tags:
      - eventos
      summary: Lista todos os eventos
      description: Obtém uma lista de todos os eventos cadastrados
      responses:
        200:
          description: Lista de eventos recuperada com sucesso
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Evento'

    post:
      tags:
      - eventos
      summary: Cria um novo evento
      description: Cria um novo registro de evento
      parameters:
        - name: Evento
          in: body
          description: Objeto de evento a ser criado
          required: true
          schema:
            $ref: '#/components/schemas/Evento'
      responses:
        201:
          description: Evento criado com sucesso

  /eventos/{id}:
    get:
      tags:
      - eventos
      summary: Obtém um evento pelo ID
      description: Obtém um evento específico pelo seu ID
      parameters:
        - name: id
          in: path
          description: ID do evento a ser obtido
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Evento recuperado com sucesso
          schema:
            $ref: '#/components/schemas/Evento'

    put:
      tags:
      - eventos
      summary: Atualiza um evento existente
      description: Atualiza os dados de um evento existente pelo seu ID
      parameters:
        - name: id
          in: path
          description: ID do evento a ser atualizado
          required: true
          type: integer
          format: int64
        - name: Evento
          in: body
          description: Novos dados do evento
          required: true
          schema:
            $ref: '#/components/schemas/Evento'
      responses:
        200:
          description: Evento atualizado com sucesso

    delete:
      tags:
      - eventos
      summary: Deleta um evento pelo ID
      description: Deleta um evento específico pelo seu ID
      parameters:
        - name: id
          in: path
          description: ID do evento a ser deletado
          required: true
          type: integer
          format: int64
      responses:
        204:
          description: Evento deletado com sucesso
          
components:
  schemas:
    Usuario:
      required:
        - cpf
        - nome
        - prof
        - matricula
        - telefone
        - email
        - senha
      type: object
      properties:
        cpf:
          type: integer
          description: Chave primária
          format: int64
          example: 88399201456
        nome:
          type: string
          example: "Gabriel"
        prof:
          type: boolean
          example: true
        matricula:
          type: integer
          format: int64
          example: 18727339
        telefone:
          type: integer
          format: int64
          example: 736729555
        email:
          type: string
          example: "gabriel@email.com"
          description: Valor deve ser único
        senha:
          type: string
          example: "iaunwd87h23n*&"
    Sala:
      required:
        - capacidade
      type: object
      properties:
        id:
          type: integer
          description: Chave primária
          format: int64
          example: 132
        numero:
          type: string
          description: Valor único
          example: "H302"
        nome:
          type: string
          description: Valor único
          example: "Auditório"
        capacidade:
          type: integer
          format: int64
          example: 60
    Modalidade:
      type: object
      required:
        - modalidade
      properties:
        id:
          type: integer
          description: Chave primária
          format: int64
          example: 340
        modalidade:
          type: string
          description: Valor único
          example: "presencial"
    Categoria:
      type: object
      required:
        - categoria
      properties:
        id:
          type: integer
          description: Chave primária
          format: int64
          example: 249
        categoria:
          type: string
          description: Valor único
          example: "workshop"
    Evento:
      type: object
      required:
        - nome
        - publicoAlvo
      properties:
        id:
          type: integer
          description: Chave primária
          format: int64
          example: 101
        nome:
          type: string
          description: Valor único
          example: "Oficina de programação"
        publicoAlvo:
          type: string
          example: "Professores"
        competencias:
          type: string
          example: "Linguagens de programação"
        conteudo:
          type: string
          example: "Principios de POO e linguagem Java"
    Detalhe:
      type: object
      required:
        - maxParticipantes
      properties:
        id:
          type: integer
          description: Chave primária
          format: int64
          example: 398
        idCategoria:
          $ref: '#/components/schemas/Categoria'
          type: integer
          format: int64
          example: 829
        idEvento:
          $ref: '#/components/schemas/Evento'
          type: integer
          format: int64
          example: 512
        cpfResponsavel:
          $ref: '#/components/schemas/Usuario'
          type: integer
          format: int64
          example: 78300062536
        idModalidade:
          $ref: '#/components/schemas/Modalidade'
          type: integer
          format: int64
          example: 900
        maxParticipantes:
          type: integer
          format: int64
          example: 60
        objetivoEvento:
          type: string
          example: "Desenvolver o conhecimento em programação"
    Ocorrencia:
      type: object
      required:
        - inicioEvento
        - terminoEvento
      properties:
        id:
          type: integer
          description: Chave primária          
          format: int64
          example: 201
        idSala:
          $ref: '#/components/schemas/Sala'
          type: integer
          format: int64
          example: 302
        idDetalhe:
          $ref: '#/components/schemas/Detalhe'
          type: integer
          format: int64
          example: 692  
        inicioEvento:
          type: string
          format: date-time
          example: "2017-07-21T17:32:28Z"
        terminoEvento:
          type: string
          format: date-time
          example: "2017-07-21T19:30:25Z"
        cargaHoraria:
          type: integer
          format: int64
          example: 2
    Aplicador:
      type: object
      properties:
        id:
          type: integer
          description: Chave primária
          format: int64
          example: 123
        cpfAplicador:
          $ref: '#/components/schemas/Usuario'
          type: integer
          format: int64
          example: 78300062536
        idDetalhe:
          $ref: '#/components/schemas/Detalhe'
          type: integer
          format: int64
          example: 692
          